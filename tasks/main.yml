---
# role: ansible-role-kickstart
# file: tasks/main.yml

- name: "Set os_family dependent variables"
  ansible.builtin.include_vars: '{{ ansible_os_family }}.yml'

- name: "Set distribution dependent variables"
  ansible.builtin.include_vars: "{{ item }}"
  vars:
    params:
      files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml'
      paths:
        - 'vars'
      skip: true
  loop: "{{ query('first_found', params, errors='ignore') }}"

- name: "Install packages for kickstart"
  delegate_to: "{{ kickstart_host }}"
  ansible.builtin.package:
    name: "{{ kickstart_packages }}"
    state: present

- name: "Generate mac address per defined network card"
  become: false
  delegate_to: localhost
  jam82.general.gen_mac_from_name:
    name: "{{ inventory_hostname }}"
    count: "{{ kickstart_mac_count }}"
  register: _vm
  when: kickstart_gen_mac_from_name | bool

- name: "Debug mac address generation"
  become: false
  delegate_to: localhost
  ansible.builtin.debug:
    msg: "{{ _vm }}"
  when: kickstart_gen_mac_from_name | bool

- name: "Create kickstart file for host {{ kickstart_host }}"
  become: false
  delegate_to: "{{ kickstart_host }}"
  ansible.builtin.template:
    src: kickstart.cfg.j2
    dest: "{{ kickstart_hostpath }}"
    mode: 0660

- name: "Validate kickstart file {{ kickstart_hostpath }}"
  become: false
  delegate_to: "{{ kickstart_host }}"
  ansible.builtin.command: ksvalidator --version={{ kickstart_version }} {{ kickstart_hostpath }}
  changed_when: false
